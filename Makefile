# Alternative GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=release
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),release)
  CppUTest_config = release
  CppUTestExt_config = release

else ifeq ($(config),debug)
  CppUTest_config = debug
  CppUTestExt_config = debug

else
  $(error "invalid configuration $(config)")
endif

PROJECTS := CppUTest CppUTestExt

.PHONY: all clean help $(PROJECTS) 

all: $(PROJECTS)

CppUTest:
ifneq (,$(CppUTest_config))
	@echo "==== Building CppUTest ($(CppUTest_config)) ===="
	@${MAKE} --no-print-directory -C . -f CppUTest.make config=$(CppUTest_config)
endif

CppUTestExt:
ifneq (,$(CppUTestExt_config))
	@echo "==== Building CppUTestExt ($(CppUTestExt_config)) ===="
	@${MAKE} --no-print-directory -C . -f CppUTestExt.make config=$(CppUTestExt_config)
endif

clean:
	@${MAKE} --no-print-directory -C . -f CppUTest.make clean
	@${MAKE} --no-print-directory -C . -f CppUTestExt.make clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  release"
	@echo "  debug"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   CppUTest"
	@echo "   CppUTestExt"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"